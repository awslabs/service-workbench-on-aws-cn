"use strict";
/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.normalizeSidebars = void 0;
const types_1 = require("./types");
const lodash_1 = require("lodash");
function normalizeCategoriesShorthand(sidebar, options) {
    return Object.entries(sidebar).map(([label, items]) => ({
        type: 'category',
        collapsed: options.sidebarCollapsed,
        collapsible: options.sidebarCollapsible,
        label,
        items,
    }));
}
/**
 * Normalizes recursively item and all its children. Ensures that at the end
 * each item will be an object with the corresponding type.
 */
function normalizeItem(item, options) {
    var _a, _b;
    if (typeof item === 'string') {
        return [
            {
                type: 'doc',
                id: item,
            },
        ];
    }
    if ((0, types_1.isCategoriesShorthand)(item)) {
        return normalizeCategoriesShorthand(item, options).flatMap((subitem) => normalizeItem(subitem, options));
    }
    return item.type === 'category'
        ? [
            {
                ...item,
                items: item.items.flatMap((subItem) => normalizeItem(subItem, options)),
                collapsible: (_a = item.collapsible) !== null && _a !== void 0 ? _a : options.sidebarCollapsible,
                collapsed: (_b = item.collapsed) !== null && _b !== void 0 ? _b : options.sidebarCollapsed,
            },
        ]
        : [item];
}
function normalizeSidebar(sidebar, options) {
    const normalizedSidebar = Array.isArray(sidebar)
        ? sidebar
        : normalizeCategoriesShorthand(sidebar, options);
    return normalizedSidebar.flatMap((subitem) => normalizeItem(subitem, options));
}
function normalizeSidebars(sidebars, options) {
    return (0, lodash_1.mapValues)(sidebars, (subitem) => normalizeSidebar(subitem, options));
}
exports.normalizeSidebars = normalizeSidebars;
